ipeline {
    agent any
    environment {
        AWS_CREDENTIALS = 'aws-credentials'  // Jenkins credentials ID for AWS
        ECR_REPO_NAME = 'my-app-repo'  // ECR repository name
        IMAGE_TAG = "my-app:${BUILD_NUMBER}"  // Tagging the image with the build number
        AWS_REGION = 'us-east-1'  // AWS region
    }
    stages {
        stage('Clone Repository') {
            steps {
                echo 'Cloning Git repository...'
                git branch: 'main', url: 'https://github.com/lily4499/helm-node-app.git'
            }
        }
        stage('Build Docker Image') {
            steps {
                echo 'Building Docker image...'
                sh 'docker build -t $IMAGE_TAG .'
            }
        }
        stage('Login to ECR') {
            steps {
                echo 'Logging in to ECR...'
                withCredentials([usernamePassword(credentialsId: "$AWS_CREDENTIALS", usernameVariable: 'AWS_ACCESS_KEY_ID', passwordVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                    sh 'aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com'
                }
            }
        }
        stage('Push Docker Image to ECR') {
            steps {
                echo 'Pushing Docker image to ECR...'
                sh 'docker tag $IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME:$BUILD_NUMBER'
                sh 'docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME:$BUILD_NUMBER'
            }
        }
        stage('Deploy to EKS') {
            steps {
                echo 'Deploying to EKS...'
                sh 'kubectl apply -f k8s/deployment.yaml'
            }
        }
    }
    post {
        always {
            echo 'Cleaning up local Docker images...'
            sh 'docker rmi $IMAGE_TAG || true'
        }
    }
}
